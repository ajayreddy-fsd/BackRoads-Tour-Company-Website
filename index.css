*{
  margin: 0;
  padding: 0;
}

:root {
    /* dark shades of primary color*/
    --clr-primary-1: hsl(184, 91%, 17%);
    --clr-primary-2: hsl(185, 84%, 25%);
    --clr-primary-3: hsl(185, 81%, 29%);
    --clr-primary-4: hsl(184, 77%, 34%);

    /* primary/main color */
    --clr-primary-5: hsl(185, 62%, 45%);

    /* lighter shades of primary color */
    --clr-primary-6: hsl(185, 57%, 50%);
    --clr-primary-7: hsl(184, 65%, 59%);
    --clr-primary-8: hsl(184, 80%, 74%);
    --clr-primary-9: hsl(185, 94%, 87%);
    --clr-primary-10: hsl(186, 100%, 94%);

    /* darkest grey - used for headings */
    --clr-grey-1: hsl(209, 61%, 16%);
    --clr-grey-2: hsl(211, 39%, 23%);
    --clr-grey-3: hsl(209, 34%, 30%);
    --clr-grey-4: hsl(209, 28%, 39%);

    /* grey used for paragraphs */
    --clr-grey-5: hsl(210, 22%, 49%);
    --clr-grey-6: hsl(209, 23%, 60%);
    --clr-grey-7: hsl(211, 27%, 70%);
    --clr-grey-8: hsl(210, 31%, 80%);
    --clr-grey-9: hsl(212, 33%, 89%);
    --clr-grey-10: hsl(210, 36%, 96%);
    --clr-white: #fff;

    --ff-primary: "Lato", sans-serif;

    /* --transition: all 0.3s linear;
    --spacing: 0.25rem;
    --radius: 0.5rem;
    --light-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    --dark-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); */
}

/* !?part-1 started */
/* !part-1 started */
/* !part-1 started */
/* !part-1 started */


.hero{
    background: linear-gradient(rgba(50, 206, 209, 0.671), rgba(0, 0, 0, 0.849)), url(./Resources/images/main.jpeg) no-repeat center/cover scroll;
    width: 100%;
    height: 100vh;
    box-sizing: border-box;

    /* following are the flex properties */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  .hero h1{
    color: white;
    text-transform: uppercase;
    font-family: var(--ff-primary);
    font-size: 60px;
    letter-spacing: 5px;
    text-align: center;
    line-height: 82px;

    width: 80%;
    max-width: 1200px;
  /* why did i include above two props? */
  /* watch thisvideo : https://youtu.be/Ew6VYIziGSw */

    margin-bottom: 30px;
    padding-top: 75px;
  }

  .hero p{
    color: white;
    font-family: var(--ff-primary);
    letter-spacing: 3px;
    line-height: 35px;
    text-align: center;

    width: 60%;
    max-width: 650px;
  /* why did i include above two props? */
  /* watch thisvideo : https://youtu.be/Ew6VYIziGSw */

    margin-bottom: 50px;
  }

  .hero a{
    text-decoration: none;
    color: white;
    text-transform: uppercase;
    font-family: var(--ff-primary);
    letter-spacing: 4.3px;
    border: 2px white solid;
    display: block;
    width: 220px;
    text-align: center;
    box-sizing: border-box;
    padding: 14px 12px;

    transition: all 0.5s 0s;
  }

/* end of styling */



/* transition starts */

.hero a:hover{
    background: white;
    color: var(--clr-primary-5);
}

/* transition ends */






/* media query starts */

@media screen and (min-width:800px){

    .hero h1{
      font-size: 70px;
    }

}

/* media query end */
/* !part-1 ended */
/* !part-1 ended */
/* !part-1 ended */
/* !?part-1 ended */




/* !?part-2 started */
/* !part-2 started */
/* !part-2 started */
/* !part-2 started */

.about{
    box-sizing: border-box;
    text-align: center;
    display: flex;
    flex-direction: column;
    margin: 90px 4%;
}

.about h1{
    font-family: var(--ff-primary);
    color: black;
    text-transform: uppercase;
    font-size: 40px;
    letter-spacing: 9px;
}

.about span{
    color: var(--clr-primary-7);
}

.about p{
    text-align: left;
    font-family: var(--ff-primary);
    line-height: 30px;
    color: rgba(0, 0, 0, 0.596);
    font-size: 16px;
    margin: 10px 0px;
}

.about img{
    box-sizing: border-box;

    display: block;
    width: 95%; 
    margin: auto;
    margin-top: 70px;
    margin-bottom: 70px;
}

.about h2{
    font-family: var(--ff-primary);
    color: black;
    text-transform: uppercase;
    font-size: 30px;
    letter-spacing: 5px;
    word-spacing: 6px;
    margin-bottom: 15px;
    text-align: left;
}

.about a{
    text-decoration: none;
    font-family: var(--ff-primary);
    color: rgba(255, 255, 255, 0.945);
    background: var(--clr-primary-7);
    border: 2px solid var(--clr-primary-7);
    display: block;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 3px;
    font-size: 17px;
    width: 150px;
    padding: 15px;
    margin-top: 30px;

    transition: all 0.5s 0s;
}

.about-info{
    margin: 0px 2%;

    /* why used above prop? as about-info is not properly aligning with the image, i adjusted it like this */
}

/* end of styling */






/* transition starts */

.about a:hover{
    color: var(--clr-primary-7);
    background: white;
    border: 2px solid var(--clr-primary-7);
}

/* transition ends */






/* media queries start */

@media screen and (min-width:1000px){

    .about-container{
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
    }

    .about-image{
        max-width: 575px;
    }

    .about-info{
        margin-left: 7%;

        max-width: 550px;
    /* why used the above prop? 
        to limit the no.of lines in the para, as the viewport width changes */
    }

    .about img{
        margin: 0;
        /* why removed all margins for image? i have to create shifted-border in the next media query, and these image-margins are creating hassles, so removed margins for image, but added margins to it's container , so no issues*/
    }

    .about-container{
        margin: 60px;
        /* why above prop ? 
        as per the above discussion, i added this prop */
    }

}

@media screen and (min-width:1150px){

    .about-image{
        border: 8px solid var(--clr-primary-7);
    }

    .about img{       
        width: 100%;
        /* why did i do the above thing? if u see earlier code, i.e., without media query, i have set img-width to 95%, but with that width, img will not fit into it's container properly, so changed it to 100% */

        position: relative;
        top: 15px;
        left: 15px;
    }

}

/* media queries end */

/* !part-2 ended */
/* !part-2 ended */
/* !part-2 ended */
/* !?part-2 ended */





/* !?part-3 started */
/* !part-3 started */
/* !part-3 started */
/* !part-3 started */


.services{
    background: rgb(247,247,247);
    /* the above property gives background color to the complete services div */

    padding: 80px 20px;
    padding-bottom: 110px;
    box-sizing: border-box;
}

.services h1{
    font-family: var(--ff-primary);
    color: black;
    text-transform: uppercase;
    font-size: 40px;
    letter-spacing: 9px;
    text-align: center;
    box-sizing: border-box;

    margin-bottom: 55px;
}

.services span{
    color: var(--clr-primary-7);
}

.services h2{
    font-family: var(--ff-primary);
    color: black;
    text-transform: uppercase;
    font-size: 20px;
    letter-spacing: 3px;
    text-align: center;
    box-sizing: border-box;
}

.services p{
    text-align: center;
    font-family: var(--ff-primary);
    line-height: 25px;
    color: rgba(0, 0, 0, 0.596);
    font-size: 15px;
    box-sizing: border-box;
    margin: 10px 0px;

    max-width: 220px;
    /* why width was given, to control the no.of lines of the paragraph based on veiwport size */
}

.services i{
    color: black;
    font-size: 30px;
    text-align: center;
    box-sizing: border-box;
}

.services .i-div{
    width: 55px;
    height: 60px;
    background: var(--clr-primary-7);
    box-sizing: border-box;

    /* the following flex-box is activated to place the font-awesome icons in the center of their container which is i-div */
    display: flex;
    justify-content: center;
    align-items: center;

    margin-bottom: 20px;
}

/* the following code block, 
is to align services-1, 2, 3 at center
but flex-direction will be column */
.services-container{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    box-sizing: border-box;
}

/* the following code block, 
is to align contents of service-1, 2, 3 at center
but flex-direction will be column */
.service-1, .service-2, .service-3{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    box-sizing: border-box;
    margin: 15px 0px;
}


/* styling is done */






/* TODO No confusion, 
TODO the following are the flex-directions of the ".services-container", "service-$", "service-$-info" for different media queries

TODO        initially -> all are column
TODO        @ 600px   -> row, column, column
TODO        finally   -> row, row, column   */


/* media queries start */

@media screen and (min-width:600px){

    .services-container{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        flex-wrap: wrap;

        margin-right: 2%;
        /* why?, due to heading-length differences, services do not appear to be at the center of the webpage, to nullify that, i adjsted margin-right to the container */
    }

    .service-1, .service-2{
        flex-grow: 1;
        /* why?, since in the above code-block, i have set justify-content to flex-start, by doing which i will be left with an empty space in the first row of the "services-container", to not make that happen, i activated flex-grow option */

        /* why activated only service-1 & 2, why not service-3, because, if i activate that, then in the second-row of the container, there will be no space left, i do not want that, i want to service-3 to be at the flex-start position only leaving gap after it*/
    }

    .service-3{
        flex-basis: 50%;
        /* why? as said, i want service-3 to be in the flex-start position, leaving gap after it in the second row,  */

        /* but 1&2 grow with viewport, 3 will not grow, so there will aligning problem, to counter that, i have set flex-basis to 50%, by doing this, the aligning problem was solved */

    }

}



@media screen and (min-width:800px){
    
    .service-3{
        flex: 1 0 auto;
        /* why?, once view-port reaches this media query, i don't want to set service-3's flex-basis, becuase, this will make 3 fatter & 1,2 thinner */
    }

}



@media screen and (min-width:1200px){

    .service-1, .service-2, .service-3{
        display: flex;
        flex-direction: row;
    }
    
    .service-1-info, .service-2-info, .service-3-info{
        display: flex;
        flex-direction: column;
        align-items: flex-start;
    }

    .services .i-div{
        align-self: flex-start;
        /* why above prop?, because i want the i-div container to start from starting of "service-$" */
    }

    .service-1-info, .service-2-info, .service-3-info{
        margin-left: 15px;
        /* why this prop?, to create gap b/w "service-$-info" and 'i-div' */
    }

    .services p{
        max-width: 290px;
        /* why this prop?, para was taking 3-lines, wanna restrict that to just 2-lines for a better look */

        text-align: left;
        /* why this prop?, wanna align at the start of the flex, but align-self prop was not working */
    }

    .services-container{
        margin-left: 2.3%;
        /* why?, due to heading-length differences, services do not appear to be at the center of the webpage, to nullify that, i adjsted margin-right to the container */
    }

}

/* media queries end */



/* !part-3 ended */
/* !part-3 ended */
/* !part-3 ended */
/* !?part-3 ended */





/* !?part-4 started */
/* !part-4 started */
/* !part-4 started */
/* !part-4 started */


.tours h1{
    font-family: var(--ff-primary);
    color: black;
    text-transform: uppercase;
    font-size: 40px;
    letter-spacing: 9px;
}

.tours span{
    color: var(--clr-primary-7);
}

/* the following is for tour-$'s date-div */
.tours .tour-1-date{
    background: url(./Resources/images/tour-1.jpeg) no-repeat center/cover scroll;
    width: 85vw;
    height: 50vh;
}

/* the following is for tour-$'s date-div */
.tours .tour-2-date{
    background: url(./Resources/images/tour-2.jpeg) no-repeat center/cover scroll;
    width: 85vw;
    height: 50vh;
}

/* the following is for tour-$'s date-div */
.tours .tour-3-date{
    background: url(./Resources/images/tour-3.jpeg) no-repeat center/cover scroll;
    width: 85vw;
    height: 50vh;
}

/* the following is for tour-$'s date-div */
.tours .tour-4-date{
    background: url(./Resources/images/tour-4.jpeg) no-repeat center/cover scroll;
    width: 85vw;
    height: 50vh;
}

/* the following is for tour-$'s date */
.tours h2{
    font-family: ;
    background: var(--clr-primary-7);
    color: rgba(0, 0, 0, 0.568);
    font-weight: 1;
    font-size: 17px;
    box-sizing: border-box;
    padding: 8px;
    width: 166px;
    text-align: center;
    text-transform: capitalize;
}

.tours h3{
    font-family: var(--ff-primary);
    color: black;
    text-transform: capitalize;
    font-size: 20px;
    letter-spacing: 5px;
}

.tours h4{
    font-family: var(--ff-primary);
    color: var(--clr-primary-7);
    text-transform: capitalize;
    font-weight: 300;
    letter-spacing: 0.5px;
    font-size: 15px;
}

.tours p{
    font-family: var(--ff-primary);
    color: rgba(0, 0, 0, 0.288);
    font-weight: 400;
    text-transform: capitalize;
}

.tours a{
    text-decoration: none;
    font-family: var(--ff-primary);
    color: rgba(255, 255, 255, 0.945);
    background: var(--clr-primary-7);
    border: 2px solid var(--clr-primary-7);
    display: block;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 3px;
    font-size: 17px;
    width: 120px;
    padding: 15px;
    margin-top: 5px;

    transition: all 0.5s 0s;
}


/* ?the following styling is to style "tour-$-info" */
.tour-1-info, 
.tour-2-info, 
.tour-3-info, 
.tour-4-info{
    width: 85vw;
    /* width shd be same as tour image at any cost */

    height: 22.5vh;
    box-sizing: border-box;

    /* the following flex-box is activated to "tour-$-info"'s children with it's parent properly */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: 18px;
}

.tour-1-info-cont, 
.tour-2-info-cont, 
.tour-3-info-cont, 
.tour-4-info-cont{
    align-self: flex-end;

    /* why?, to place the length & cost of each trip at bottom-right corner of it's div which is "tour-$-info" */

    margin-top: -10px;
    margin-right: 1px;
    /* why? above 2 props?, to shift "tour-$-info-cont" little top within it's parent "tour-$-info" */
}

.tours h4{
    padding-top: 30px;
    /* why?, to crate gap on the top for trip-location */
}

.tours{
    display: flex;
    flex-direction: column;
    align-items: center;

    /* why above flex was activated?, to place all "tour-$" incuding main-heading & anchor-tag at the center of webpage horizontally */

    padding-top: 90px;
    padding-bottom: 90px;
}

.tour-1, 
.tour-2, 
.tour-3, 
.tour-4{
    margin: 65px 0px;
    /* why?, to create gap between each of the tours */
    
    box-shadow: 2px 5px 5px 2px rgba(0, 0, 0, 0.247);
    transition: all 0.5s 0s;
}

/* end of styling */






/* transition starts */

.tours a:hover{
    color: var(--clr-primary-7);
    background: white;
    border: 2px solid var(--clr-primary-7);
}

.tour-1:hover, 
.tour-2:hover, 
.tour-3:hover, 
.tour-4:hover{
    transform: scale(1.01);
    box-shadow: 5px 6px 10px 3px rgba(0, 0, 0, 0.37);
}

/* transition ends */






/* media queries start */

@media screen and (min-width:750px){

    .tours-container{
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-evenly;
        align-content: center;

        /* why?, as this query starts, all "tour-$"'s start laigning with flex-direction = row */
    }


    /* ?as u know, that each of the "tour-$" has two child-divs which are "tour-$-date" and "tour-$-info"
    when i applied width = 40vw for "tour-$" it didn't work, so i applied fot it's children and it worked*/
    .tours .tour-1-info, 
    .tours .tour-2-info, 
    .tours .tour-3-info, 
    .tours .tour-4-info{
        width: 40vw;
    }
 
    .tours .tour-1-date, 
    .tours .tour-2-date, 
    .tours .tour-3-date, 
    .tours .tour-4-date{
        width: 40vw;
        height: 30vh;
    }

    .tour-3, 
    .tour-4{
        margin-top: 10px;
        /* why?, just to adjust gap b/w above-2-tours and below-two-tours */
    }

}

@media screen and (min-width: 1150px){

    .tours-container{
        margin-left: 5%;
        margin-right: 4%;
        /* just adjusting the margins, so that all the tours will be concentrated in the center without much spacing b/w them */
    }

    /* ?same as above media query, */
    .tours .tour-1-info, 
    .tours .tour-2-info, 
    .tours .tour-3-info, 
    .tours .tour-4-info{
        width: 23vw;
    }
 
    .tours .tour-1-date, 
    .tours .tour-2-date, 
    .tours .tour-3-date, 
    .tours .tour-4-date{
        width: 23vw;
    }

    .tour-3, 
    .tour-4{
        margin-top: 65px;
        /* why?, as we altered it in the previous media query, im re-arranging it */
    }

    

    /* !below is additional coding, why?
    go to this link: https://drive.google.com/file/d/19ulsPtaEcSCAmEifSh1ZuzTy7n9QvCBO/view?usp=sharing */
    
    .tours-container{
        justify-content: flex-start;
    }

    .tour-1, .tour-2, .tour-3{
        flex-grow: 1;

        /* why below extra props, to give spacing between tours & nothing else */
        margin-left: 20px;
        margin-right: 20px;
    }

    .tour-4{
        flex: 0 0 30%;

        /* why below extra props, to align properly */
        margin-left: 1.6%;
        margin-top: 0px;
    }

    .tours .tour-1-info, 
    .tours .tour-2-info, 
    .tours .tour-3-info,
    .tours .tour-4-info, 
    .tours .tour-1-date, 
    .tours .tour-2-date, 
    .tours .tour-3-date,
    .tours .tour-4-date{
        width: 100%;
        /* why?, to fill their container i.e., "tour-$" fully  */
    }

    /* "explore hong kong" was creating issues, so limited all such headings */
    .tours h3{
        font-size: 18px;
        width: 250px;
    }

}

/* media queries end */

/* !part-4 ended */
/* !part-4 ended */
/* !part-4 ended */
/* !?part-4 ended */





/* !?part-5 started */
/* !part-5 started */
/* !part-5 started */
/* !part-5 started */


.images h1{
    font-family: var(--ff-primary);
    color: black;
    text-transform: uppercase;
    font-size: 40px;
    letter-spacing: 9px;
    margin-bottom: 33px;
}

.images span{
    color: var(--clr-primary-7);
}

.images img{
    width: 100%;

    display: block;
    /* why? there is a little-extra-space between the img & it's container, to eliminate that, i didi this */

    transition: all 0.5s 0s;
}

.image-1, .image-2, .image-3, .image-4, .image-5, .image-6{
    background: var(--clr-primary-7);

    position: relative;
}

.images a{
    color: white;
    font-size: 30px;

    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    /* why above posiitoning? to place the FA-icon at the center of the image which means center the "image-$" container */

    opacity: 0;
    /* why? to hide the FA-icon, will unveil it when hovered */

    transition: all 0.5s 0s;
}

.images{
    text-align: center;
    padding-top: 40px;
    background: rgb(175,175,175);
}

/* styling end */







/* transition starts */

.image-1:hover img, 
.image-2:hover img, 
.image-3:hover img, 
.image-4:hover img, 
.image-5:hover img, 
.image-6:hover img{
    opacity: 0.5;
}

.image-1:hover a, 
.image-2:hover a, 
.image-3:hover a, 
.image-4:hover a, 
.image-5:hover a, 
.image-6:hover a{
    opacity: 1;
}

/* transition ends */








/* media queries start */

@media screen and (min-width:750px){

    .images-container{
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
    }

    .image-1, 
    .image-2, 
    .image-3, 
    .image-4, 
    .image-5, 
    .image-6{
        width: 50%;
    }

}

@media screen and (min-width:1000px){

    .image-1, 
    .image-2, 
    .image-3, 
    .image-4, 
    .image-5, 
    .image-6{
        width: 25%;
    }

}

/* media queries end */

/* !part-5 ended */
/* !part-5 ended */
/* !part-5 ended */
/* !?part-5 ended */





/* !?part-6 started */
/* !part-6 started */
/* !part-6 started */
/* !part-6 started */


.contact h1{
    font-family: var(--ff-primary);
    color: black;
    text-transform: uppercase;
    font-size: 40px;
    letter-spacing: 9px;
    margin-bottom: 35px;
}

.contact span{
    color: var(--clr-primary-7);
}

.contact input{
    width: 68vw;
    height: 40px;
    border: 2px solid var(--clr-primary-7);
    font-family: var(--ff-primary);
    text-transform: uppercase;
    letter-spacing: 4px;
    font-size: 15px;
    color: rgb(0, 0, 0);
    font-weight: 500;
    padding-left: 10px;
    box-sizing: border-box;

    max-width: 500px;
    /* why? to limit it's width when screen width increases */
}

.contact .button{
    width: 23vw;
    margin-left: -15px;
    background: white;
    padding-left: 10px;
    padding-right: 5px;
    text-align: center;

    max-width: 120px;
    /* why? to limit it's width when screen width increases */

    transition: all 0.5s 0s;
}

.contact{
    padding-top: 85px;
    padding-bottom: 50px;
    margin-bottom: 40px;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /* why?, placing this whole part-6 align at center wrt x-axis */
}

/* end of styling */







/* transition starts */

.contact .button:hover{
    background: var(--clr-primary-7);
    color: white;
}

/* transition ends */

/* !part-6 ended */
/* !part-6 ended */
/* !part-6 ended */
/* !?part-6 ended */





/* !?part-7 started */
/* !part-7 started */
/* !part-7 started */
/* !part-7 started */


.end{
    background: rgb(34, 34, 34);
    width: 100%;
    height: 65vh;

    padding: 0px 30px;
    padding-top: 90px;
    padding-bottom: 70px;

    box-sizing: border-box;
}

.end .navigation a{
    color: white;
    text-decoration: none;
    text-transform: capitalize;
    font-family: var(--ff-primary);
    letter-spacing: 4.5px;

    transition: all 0.5s 0s;
}

.end .social-media a{
    color: white;
    font-size: 30px;

    display: inline-block;
    /* why?, as a-tags are indigeniously inline and don't obey margins/paddings on top/bottom, so I converted them to inline-block, so that they will obey my orders */

    margin: 30px 10px;

    transition: all 0.5s 0s;
}

.end .copyrights{
    color: white;
    text-decoration: none;
    text-transform: capitalize;
    font-family: var(--ff-primary);
    letter-spacing: 4.5px;
    text-align: center;
    font-weight: 300;
    line-height: 30px;
    margin: 20px;
}

.end{
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    /* why?, coverted this entire part to fit at center vertically */
}

.end .nav-links-set{
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    flex-wrap: wrap;
    /* the above is only for navigation-links-set, which shd be placed row-wise */
}

.end .nav-links-set a{
    margin-bottom: 10px;
    margin-left: 10px;
    margin-right: 10px;
    /* why?, to separate nav-links from each other & create spacing */
}

/* styling end */








/* transition starts */

.end .navigation a:hover{
    color: var(--clr-primary-7);
}

.end .social-media a:hover{
    color: var(--clr-primary-7);
}

/* transition ends */







/* media queries start */

@media screen and (min-width:550px){

    .end{
        height: 45vh;
    }

}

/* media queries end */

/* !part-7 ended */
/* !part-7 ended */
/* !part-7 ended */
/* !?part-7 ended */





/* !?part-8 started */
/* !part-8 started */
/* !part-8 started */
/* !part-8 started */


.menu{
    width: 100vw;
    /* !why did i comment the above width?, if don't comment, sometimes then im getting the menu extended beyond the ecreen-width, How bizzare */

    height: 62px;
    background: rgb(236,236,236);
    box-sizing: border-box;

    box-shadow: -1px 4.5px 5px 0px rgba(0, 0, 0, 0.344);
    
    /* ?margin-bottom: 5px; */
    /* !why?, so that box-shadow will be visible */
}

.menu .navigation a{
    color: black;
    text-decoration: none;
    text-transform: capitalize;
    font-family: var(--ff-primary);
    letter-spacing: 4.5px;
    font-weight: 600;
    box-sizing: border-box;

    margin-left: 10px;
    margin-right: 10px;
    /* above two props are to create spacing b/w navigation links */

    transition: all 0.5s 0s;
    animation: expand-and-contract 0.5s 1;
}

.menu .social-media a{
    color: var(--clr-primary-7);
    font-size: 18px;
    box-sizing: border-box;

    margin-left: 4px;
    margin-right: 4px;
    /* above two props are to create spacing b/w social-media icons */

    transition: all 0.5s 0s;
}

.menu{
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
    align-items: center;

    /* all "logo", "naviagtion", "social-media-link" are arranged in a row using flexbox */
}

.menu .navigation{
    display: flex;
    flex-direction: row;
    justify-content: center;
    /* all naigation-links with in the container naviagtion" are arranged in a row using flexbox and are aligned at center */

    width: 70%;
    /* why?, so that naigation-links occupy majority space in the menu-bar */
}

.menu{
    position: fixed;
    top: 0px;
    /* the above code is to stick the nav-bar at specific part of the screen */
    z-index: 1;
}

/* styling end */









/* transition starts */

.menu .navigation a:hover{
    color: var(--clr-primary-7);
}

.menu .social-media a:hover{
    color: rgba(0, 0, 0, 0.299);

    display: inline-block;
    /* why? since a-tags are inline & do not obey translateY-prop, converted them to inlinr-block */

    transform: translateY(-3px);
}

/* !the below animation is for navigation-links */
@keyframes expand-and-contract{

    0%{
        margin-left: 32px;
        margin-right: 32px;
    }

    100%{
        margin-left: 10px;
        margin-right: 10px;
    }

}

/* transition end */









/* media query starts */

@media screen and (max-width:1100px){

    .menu .navigation{
       display: none;
    }

    .menu{
        justify-content: space-between;
        padding-left: 20px;
        padding-right: 20px;
    }

}

/* media query ends */

/* !part-8 ended */
/* !part-8 ended */
/* !part-8 ended */
/* !?part-8 ended */






